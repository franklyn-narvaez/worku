generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") // uses connection pooling
}

enum UserStatus {
  ACTIVE
  INACTIVE
}

model User {
  id          String     @id @default(cuid())
  name        String
  lastName    String
  email       String     @unique
  password    String
  createdDate DateTime   @default(now())
  updatedDate DateTime   @updatedAt
  collegeId   String?
  college     College?   @relation(fields: [collegeId], references: [id])
  roleId      String
  role        Role?      @relation(fields: [roleId], references: [id])
  status      UserStatus @default(ACTIVE)
  Sessions    Sessions[]
}

model Faculty {
  id      String    @id @default(cuid())
  name    String    @unique
  college College[]
  Offer   Offer[]
}

model College {
  id        String  @id @default(cuid())
  name      String  @unique
  user      User[]
  facultyId String
  faculty   Faculty @relation(fields: [facultyId], references: [id])
  Offer     Offer[]
}

model Offer {
  id           String   @id @default(cuid())
  title        String
  description  String?
  requirements String?
  closeDate    DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  status       Boolean  @default(true)
  collegeId    String?
  college      College? @relation(fields: [collegeId], references: [id])
  facultyId    String?
  faculty      Faculty? @relation(fields: [facultyId], references: [id])
}

model Sessions {
  id           Int      @id @default(autoincrement())
  userId       String
  user         User     @relation(fields: [userId], references: [id])
  expiresAt    DateTime
  refreshToken String
}

model Role {
  id         String           @id @default(cuid())
  code       String           @unique @default(cuid())
  name       String
  user       User[]
  permission RolePermission[]
}

model Permission {
  id    String           @id @default(cuid())
  code  String           @unique
  name  String
  roles RolePermission[]
}

model RolePermission {
  id           String     @id @default(cuid())
  roleId       String
  role         Role       @relation(fields: [roleId], references: [id])
  permissionId String
  permission   Permission @relation(fields: [permissionId], references: [id])

  @@unique([roleId, permissionId], name: "roleId_permissionId")
}
